// <auto-generated />
using Book_Sharing.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Book_Sharing.Migrations.DataDb
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20230521121649_Dati3")]
    partial class Dati3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.15");

            modelBuilder.Entity("Book_Sharing.Models.DAO_Utente", b =>
                {
                    b.Property<int>("PkUtente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CAP")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IdentityUid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("fkProvincia")
                        .HasColumnType("INTEGER");

                    b.HasKey("PkUtente");

                    b.HasIndex("fkProvincia");

                    b.ToTable("Utenti");
                });

            modelBuilder.Entity("Book_Sharing.Models.DAO_UtenteLibro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Autore")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IdLibro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Interesse")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Prestito")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Scambio")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titolo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("fkUtente")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("fkUtente");

                    b.ToTable("UtentiLibri");
                });

            modelBuilder.Entity("Book_Sharing.Models.Provincia", b =>
                {
                    b.Property<int>("PkProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("fkRegione")
                        .HasColumnType("INTEGER");

                    b.HasKey("PkProvincia");

                    b.HasIndex("fkRegione");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("Book_Sharing.Models.Regione", b =>
                {
                    b.Property<int>("PkRegione")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PkRegione");

                    b.ToTable("Regioni");
                });

            modelBuilder.Entity("Book_Sharing.Models.DAO_Utente", b =>
                {
                    b.HasOne("Book_Sharing.Models.Provincia", "Provincia")
                        .WithMany("Utenti")
                        .HasForeignKey("fkProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("Book_Sharing.Models.DAO_UtenteLibro", b =>
                {
                    b.HasOne("Book_Sharing.Models.DAO_Utente", "Utente")
                        .WithMany("Posseduti")
                        .HasForeignKey("fkUtente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("Book_Sharing.Models.Provincia", b =>
                {
                    b.HasOne("Book_Sharing.Models.Regione", "Regione")
                        .WithMany("Province")
                        .HasForeignKey("fkRegione")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regione");
                });

            modelBuilder.Entity("Book_Sharing.Models.DAO_Utente", b =>
                {
                    b.Navigation("Posseduti");
                });

            modelBuilder.Entity("Book_Sharing.Models.Provincia", b =>
                {
                    b.Navigation("Utenti");
                });

            modelBuilder.Entity("Book_Sharing.Models.Regione", b =>
                {
                    b.Navigation("Province");
                });
#pragma warning restore 612, 618
        }
    }
}
